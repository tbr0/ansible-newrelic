---
# Playbook to install New Relic sysmond and agent.

- name: Install New Relic GPG key - RedHat6
  get_url: url="http://yum.newrelic.com/548C16BF.gpg" dest="/etc/pki/rpm-gpg/RPM-GPG-KEY-NewRelic" mode=0640
  when: ansible_os_family == 'RedHat'

- name: Install New Relic PHP Agent and System Monitor - RedHat6
  yum: pkg={{ item }} state=installed
  with_items:
    - newrelic-php5
    - newrelic-sysmond
  when: ansible_os_family == 'RedHat'

- name: Download New Relic GPG key - Debian
  apt_key: url=https://download.newrelic.com/548C16BF.gpg state=present
  when: ansible_os_family == 'Debian'

- name: Preseed New Relic PHP Agent - Debian
  debconf: name="newrelic-php5" question="newrelic-php5/license-key" value={{ license_key }} vtype=string
  when: ansible_os_family == 'Debian' and license_key != ""

- name: Install New Relic PHP Agent and System Monitor - Debian
  apt: pkg={{ item }} state=installed update_cache=yes
  with_items:
    - newrelic-php5
    - newrelic-sysmond
  notify: 
    - restart apache
    - restart php-fpm
  when: ansible_os_family == 'Debian'

#- name: Check for PHP installation for RHEL
#  shell: rpm -q php5 || /bin/true
#  register: rpm_php5_output
#  ignore_errors: yes
#- debug: msg="{{ rpm_php5_output.stdout }}"

#- name: Notify user of missing PHP.
#  debug: msg="PHP is not installed, skipping New Relic PHP agent setup."
#  when: rpm_php5_output.stdout.find('is not installed') == true

#- name: Run newrelic-install with provided license key.
#  shell: /usr/bin/newrelic-install install > /tmp/newrelic-install.log
# when: rpm_php5_output.stdout.find('is not installed') == false
#- debug: msg="{{ lookup('file', '/tmp/newrelic-install.log') }}"
  
 

#- name: regather facts
#  setup:
#  when: ansible_os_family == 'RedHat'
#
#- name: copy httpd template - 6.x
#  template: src=RedHat/v22/httpd.conf.j2 dest=/etc/httpd/conf/httpd.conf
#  when: ansible_os_family == 'RedHat'
#
#- name: create conf.d directory
#  file: path=/etc/httpd/vhost.d owner=root group=root mode=0755 state=directory
#  when: ansible_os_family == 'RedHat'
#
#- name: copy ports.conf template
#  template: src=ports.conf.j2 dest=/etc/httpd/ports.conf
#  when: ansible_os_family == 'RedHat'
#
#- name: Install apache2 for Debian based
#  apt: pkg=apache2 state=installed update_cache=true
#  when: ansible_os_family == 'Debian'

#- name: copy apache2.conf template - 12.04
#  template: src=Debian/v22/apache2.conf.j2 dest=/etc/apache2/apache2.conf
#  when: ansible_os_family == 'Debian' and ansible_lsb.release == '12.04' or ansible_lsb.major_release == '7'
#
#- name: copy apache2.conf template - 14.04
#  template: src=Debian/v24/apache2.conf.j2 dest=/etc/apache2/apache2.conf
#  when: ansible_os_family == 'Debian' and ansible_lsb.release == '14.04'
#
#- name: copy ports.conf template
#  template: src=ports.conf.j2 dest=/etc/apache2/ports.conf
#  when: ansible_os_family == 'Debian'
#
#- name: create conf.d directory
#  file: path=/etc/apache2/conf.d owner=root group=root mode=0755 state=directory
#  when: ansible_os_family == 'Debian'
